{"CourseInfo":{"Title":"Güvenli Yazılım Geliştirme Kılavuzu Eğitimi","Description":"Bu eğitim, yazılım güvenliğinin temel kavramlarını, güvenli yazılım geliştirme ilkelerini, yöntem ve araçlarını, güvenli yazılım yaşam döngüsü süreçlerini, olgunluk modellerini, uygulama güvenliği seviyelerini ve uygulama güvenliği kurallarını kapsamlı şekilde aktarır. Kurs sonunda katılımcılar; güvenli yazılım geliştirme süreçlerinde ihtiyaç duyulan teknik bilgiye, süreçlere ve test yöntemlerine hâkim olacaktır.","Objective":null,"TargetAudience":null,"CourseImageUrl":"https://localhost/ContentFiles/IdealStudioFiles/1-ai-CourseCoverImage-586ae355-e747-4443-8d01-a190947190ba.jpg","AudioDuration":3,"SpeechAudioUrl":"https://localhost/ContentFiles/IdealStudioFiles/1-ai-CourseCoverSpeech-66f9042f-be49-4b42-b6c2-b5a308393e10.mp3","SpeechFileName":"1-ai-CourseCoverSpeech-66f9042f-be49-4b42-b6c2-b5a308393e10.mp3"},"Sections":[{"PageStyle":26,"YoutubeSearchKeyword":null,"Index":1,"Title":"Güvenli Yazılım Geliştirmenin Önemi ve Amacı","Description":null,"Content":{"paragraph":"Bu Eğitim, Yazılım Güvenliğinin Temellerini Öğrenmenizi Sağlayacaktır; Yazılımlardaki Açıklıkları En Aza İndirgemek; Kurumsal Siber Güvenliği Desteklemek; Güvenli Yazılım Geliştirme Kültürü Oluşturmak Hedeflenmektedir; Yazılım Güvenliği İlkeleri, Uygulama Güvenliği Kuralları ve Denetim Yöntemleri Detaylandırılacaktır"},"NarrationText":"Yazılım güvenliği, bir yazılımın saldırı ya da tehdit altında dahi işlevini doğru şekilde yerine getirmesini sağlamak amacıyla geliştirilmiş yaklaşım ve süreçler bütününü ifade eder. Eğitimde, yazılımlarda bulunan açıklıkların en aza indirilmesi, kurumsal siber güvenliğe katkı sağlanması ve güvenli yazılım geliştirme kültürünün oluşturulması hedeflenmektedir. Bu kapsamda, yazılım güvenliği ilkeleri, uygulama güvenliği kuralları ve denetim yöntemleri detaylandırılacaktır.","Images":[],"YoutubeUrl":null,"AudioDuration":28,"SpeechAudioUrl":"https://localhost/ContentFiles/IdealStudioFiles/AI_Section_1_2cd55854-a45b-47ce-ba74-42f1b435fcae.mp3","SpeechFileName":"AI_Section_1_2cd55854-a45b-47ce-ba74-42f1b435fcae.mp3","RelevantDocumentPart":null},{"PageStyle":27,"YoutubeSearchKeyword":null,"Index":2,"Title":"Temel Yazılım Güvenliği İlkeleri","Description":null,"Content":{"paragraph":"Yazılım Yaşam Döngüsünde Güvenliğin Önceliği; En Az Yetki ile Çalışma, Erişimlerin Sürekli Denetlenmesi, Çoklu Doğrulama Yaklaşımları","subtext1":"Varsayılan Değerlerin Güvenli Hale Getirilmesi","subtext2":"Saldırı Yüzeyinin Minimumda Tutulması"},"NarrationText":"Güvenli yazılım geliştirme yaşam döngüsünde çeşitli ilkeler ön planda tutulur. En az yetki ile çalıştırma, tüm erişimleri sürekli denetleme ve yüksek güvenlikli işlemler için çoklu doğrulama gibi yaklaşımlar, sistemin kararlılığı ve güvenliği için gereklidir. Ayrıca, varsayılan değerlerin gözden geçirilip güvenli hale getirilmesi, ortak kaynaklar için kanalların ayrıştırılması ve saldırı yüzeyinin minimum tutulması önemli diğer prensipler arasındadır.","Images":[{"ImagePrompt":"software security lifecycle principles, minimal permissions, access monitoring, multifactor authentication, secure defaults, minimal attack surface, illustrated with abstract icons","ImageSize":"W1024xH1792","ImageUrl":"https://localhost/ContentFiles/IdealStudioFiles/AI_Section_2-d464ebbc-66a8-461c-8c2b-82b683ba06cb.jpg","IsSuccess":false,"ErrorMessage":null}],"YoutubeUrl":null,"AudioDuration":27,"SpeechAudioUrl":"https://localhost/ContentFiles/IdealStudioFiles/AI_Section_2_e138aac4-18e7-4993-8080-0a95ee6408e3.mp3","SpeechFileName":"AI_Section_2_e138aac4-18e7-4993-8080-0a95ee6408e3.mp3","RelevantDocumentPart":null},{"PageStyle":15,"YoutubeSearchKeyword":null,"Index":3,"Title":"Güvenliği Sağlamada Yöntemler","Description":null,"Content":{"paragraph":"Yazılım Güvenliğini Sağlamak İçin Farklı Yöntemler Kullanılır","list":"Statik Analiz, Sembolik Koşturma, Dinamik Analiz; Negatif Testler ve Rastgele Testler; Biçimsel Doğrulama, Sanallaştırma ve Mikro Servis Kullanımı"},"NarrationText":"Yazılım güvenliğini sağlamak için çeşitli teknikler kullanılır. Statik analiz, sembolik koşturma ve dinamik analiz gibi yöntemlerle yazılımın zafiyetleri tespit edilir. Ayrıca, negatif testler ve rastgele testlerle beklenmedik durumlar incelenir. Biçimsel yöntemler, matematiksel doğrulama ile hataları azaltır. Sanallaştırma, uygulama konteynerleri ve mikro servis mimarisi de güvenlik için tercih edilen yapılar arasında yer almaktadır.","Images":[{"ImagePrompt":"software testing techniques, static analysis, dynamic analysis, negative testing, formal verification, virtualization, microservices, modern flat visual style","ImageSize":"W1024xH1792","ImageUrl":"https://localhost/ContentFiles/IdealStudioFiles/AI_Section_3-b45146f1-c5eb-4c37-a141-183dcd0f7a71.jpg","IsSuccess":false,"ErrorMessage":null}],"YoutubeUrl":null,"AudioDuration":29,"SpeechAudioUrl":"https://localhost/ContentFiles/IdealStudioFiles/AI_Section_3_aee8c45c-9e27-43b8-bd68-228efc6673ea.mp3","SpeechFileName":"AI_Section_3_aee8c45c-9e27-43b8-bd68-228efc6673ea.mp3","RelevantDocumentPart":null},{"PageStyle":21,"YoutubeSearchKeyword":null,"Index":4,"Title":"Güvenli Yazılım Geliştirme Yaşam Döngüsü","Description":null,"Content":{"paragraph1":"Güvenli Yazılım Geliştirme Yaşam Döngüsü, Yazılımın Her Aşamasında Güvenlik Unsurlarının Sürekli İzlenmesini ve Geliştiricilerin Bu Süreçlerde Aktif Olarak Yer Almasını Hedefler.","paragraph2":"Güvenlik Gereksinimlerinin Belirlenmesi ve Entegrasyonu Önemlidir.","paragraph3":"Tehditlere Karşı Süreçler Sürekli Gözden Geçirilmelidir."},"NarrationText":"Güvenli yazılım geliştirme yaşam döngüsü, yazılımın baştan sona güvenli şekilde tasarlanmasını, geliştirilmesini, test edilmesini ve sürdürülmesini kapsar. Bu yaşam döngüsünde geliştiricilerin eğitilmesi, güvenlik gereksinimlerinin tanımlanması, güvenli kodlama ve kurulum süreçlerinin entegrasyonu ile yazılımın saldırılara karşı toleranslı ve sürekli güvenli olması hedeflenir. Ayrıca, ortaya çıkabilecek yeni tehditlere cevap verebilmek için süreçler sürekli gözden geçirilir.","Images":[{"ImagePrompt":"secure software development lifecycle, requirements gathering, secure coding, integration, testing, developer training, continuous review, security process illustration","ImageSize":"W1024xH1792","ImageUrl":"https://localhost/ContentFiles/IdealStudioFiles/AI_Section_4-c5a88bee-77b5-41a4-b656-c1365c912c83.jpg","IsSuccess":false,"ErrorMessage":null}],"YoutubeUrl":null,"AudioDuration":29,"SpeechAudioUrl":"https://localhost/ContentFiles/IdealStudioFiles/AI_Section_4_ff4a2894-69c4-4eef-8aff-c79b29737347.mp3","SpeechFileName":"AI_Section_4_ff4a2894-69c4-4eef-8aff-c79b29737347.mp3","RelevantDocumentPart":null},{"PageStyle":4,"YoutubeSearchKeyword":null,"Index":5,"Title":"Güvenlik Analizleri ve Testleri","Description":null,"Content":{"paragraph":"Yazılım Güvenliğinde Analiz ve Test Süreçlerinin Kapsamlı Yürütülmesi:","list":"Saldırı Modelleme ve Kod Analizi; Uzman İncelemeleri ve Statik Analiz Araçları; Sızma Testleri ile Açıkların Belirlenmesi; Otomatize Araçlar ve Sürekli Test Planı"},"NarrationText":"Yazılım güvenliğini güçlendirmede analiz ve testler büyük rol oynar. Saldırı modelleme, kaynak kod analizleri ve uzman incelemeleriyle potansiyel zafiyetler erkenden tespit edilir. Statik analiz araçları, kaynak kodda zayıflıkları bulurken, sızma testi araçları uygulamanın dışarıdan erişilebilecek açıklıklarını ortaya çıkarır. Rastgele testler ise uygulamanın beklenmeyen durumlarını gözlemler. Her aşamada gözden geçirme, test planlaması ve otomatize edilmiş araçların kullanımı önerilir.","Images":[{"ImagePrompt":"software security analysis, penetration testing, source code review, security expert audit, automated testing tools, attack modeling, large diagram","ImageSize":"W1792xH1024","ImageUrl":"https://localhost/ContentFiles/IdealStudioFiles/AI_Section_5-57a145d5-74f9-4cfc-a4ad-70ca9a95173b.jpg","IsSuccess":false,"ErrorMessage":null}],"YoutubeUrl":null,"AudioDuration":31,"SpeechAudioUrl":"https://localhost/ContentFiles/IdealStudioFiles/AI_Section_5_bc18f3f1-e3f2-4b90-8648-bd7b81a69d0f.mp3","SpeechFileName":"AI_Section_5_bc18f3f1-e3f2-4b90-8648-bd7b81a69d0f.mp3","RelevantDocumentPart":null},{"PageStyle":28,"YoutubeSearchKeyword":null,"Index":6,"Title":"Güvenli Yazılım Geliştirme Denetim ve Olgunluk Modelleri","Description":null,"Content":{"list":"Microsoft SDL, OWASP SAMM, BSIMM Olgunluk Modelleri; Güvenlik Pratiklerinin Süreçlere Entegrasyonu; Olgunluk Seviyelerinin Değerlendirilmesi; Güvenlik Programı İyileştirmeleri"},"NarrationText":"Güvenli yazılım geliştirme süreçlerinde, Microsoft SDL, OWASP SAMM ve BSIMM gibi uluslararası kabul görmüş olgunluk modelleri kullanılır. Bu modeller, kuruluşların güvenlik pratiklerini sisteme entegre etmesini, süreçlerin yönetilmesini ve gelişmiş seviyelere ulaşılmasını sağlar. Olgunluk seviyeleri, belirli güvenlik uygulamalarının başlangıçtan tam entegrasyona kadar hangi düzeyde hayata geçirildiğini derecelendirir ve güvenlik programlarının iyileştirilmesine katkı sunar.","Images":[{"ImagePrompt":"maturity models in software security, Microsoft SDL, OWASP SAMM, BSIMM, conceptual levels, process integration, security improvement roadmap","ImageSize":"W1024xH1792","ImageUrl":"https://localhost/ContentFiles/IdealStudioFiles/AI_Section_6-a9fc62c0-61a0-4d61-8843-79bccd666017.jpg","IsSuccess":false,"ErrorMessage":null}],"YoutubeUrl":null,"AudioDuration":29,"SpeechAudioUrl":"https://localhost/ContentFiles/IdealStudioFiles/AI_Section_6_00c4b735-b72d-4cee-a6b7-384a8ed40433.mp3","SpeechFileName":"AI_Section_6_00c4b735-b72d-4cee-a6b7-384a8ed40433.mp3","RelevantDocumentPart":null},{"PageStyle":29,"YoutubeSearchKeyword":null,"Index":7,"Title":"Uygulama Güvenliği Kuralları","Description":null,"Content":{"list":"Veri Erişilebilirliği, Bütünlüğü ve Gizliliğinin Sağlanması; Uygulama Riskleri İçin Çok Katmanlı Güvenlik; Uygun Güvenlik Düzeylerinin Belirlenmesi; Kontrol Listeleri ile Doğru Güvenlik Yaklaşımı"},"NarrationText":"Uygulama güvenliği, bir uygulama tarafından saklanan, işlenen ve aktarılan verilerin, erişilebilirlik, bütünlük ve gizlilik açısından korunmasını kapsar. Uygulama güvenliği kuralları, uygulama üzerinde meydana gelebilecek risklere karşı çeşitli seviyelerde önlemler içerir. Kurumların ihtiyaçlarına ve uygulamanın bağlamına göre uygulanacak güvenlik seviyeleri belirlenir ve bu seviyelere yönelik kontroller, doğru güvenlik yaklaşımının oluşturulmasında kullanılır.","Images":[{"ImagePrompt":"application security rules, data integrity, confidentiality, multilayered security barriers, application risk control, security checklist icons","ImageSize":"W1024xH1024","ImageUrl":"https://localhost/ContentFiles/IdealStudioFiles/AI_Section_7-f731220b-0c23-4aba-836e-4c23eb83f9ee.jpg","IsSuccess":false,"ErrorMessage":null},{"ImagePrompt":"application data security, protection measures, compliance icons, safe application context, digital lock, shield, verification mark","ImageSize":"W1024xH1024","ImageUrl":"https://localhost/ContentFiles/IdealStudioFiles/AI_Section_7-edba3070-8e39-4ca9-aebd-efaab8bf7f1a.jpg","IsSuccess":false,"ErrorMessage":null}],"YoutubeUrl":null,"AudioDuration":27,"SpeechAudioUrl":"https://localhost/ContentFiles/IdealStudioFiles/AI_Section_7_98fc4987-ba6b-4318-8f88-b904da1b0387.mp3","SpeechFileName":"AI_Section_7_98fc4987-ba6b-4318-8f88-b904da1b0387.mp3","RelevantDocumentPart":null},{"PageStyle":30,"YoutubeSearchKeyword":null,"Index":8,"Title":"Kimlik Doğrulama, Erişim Denetimi ve Kurulum Güvenliği","Description":null,"Content":{"list":"Kimlik Doğrulama ve Parola Politikaları; Erişim Denetimi ve Kurulumda Güvenlik Yapılandırmaları"},"NarrationText":"Yazılımda kimlik doğrulama, yalnızca yetkili kişilerin kaynaklara erişimini sağlar. Parola güvenliği, kimlik bilgilerinin şifrelenmesi, kimlik doğrulama için çok faktörlü kontroller ve oturum yönetimi ana başlıklardır. Erişim denetimiyle kullanıcılar sadece yetkili oldukları bileşenlere ulaşır. Kurulum süreçlerinde ise güvenlik güncellemeleri, iletişimde şifreleme ve gereksiz yetkiyi engelleyecek yapılandırmalar temel önlemler arasındadır.","Images":[{"ImagePrompt":"identity authentication in software, password encryption, multifactor authentication, session management, access control, secure configuration during installation","ImageSize":"W1792xH1024","ImageUrl":"https://localhost/ContentFiles/IdealStudioFiles/AI_Section_8-09990727-e2df-403a-9624-65ed473654a1.jpg","IsSuccess":false,"ErrorMessage":null}],"YoutubeUrl":null,"AudioDuration":27,"SpeechAudioUrl":"https://localhost/ContentFiles/IdealStudioFiles/AI_Section_8_1389e18b-5d5c-4c5f-9399-62815c678926.mp3","SpeechFileName":"AI_Section_8_1389e18b-5d5c-4c5f-9399-62815c678926.mp3","RelevantDocumentPart":null},{"PageStyle":10,"YoutubeSearchKeyword":null,"Index":9,"Title":"Girdi-Çıktı Süzme ve Kişisel Verilerin Korunması","Description":null,"Content":{"paragraph1":"Girdi ve Çıktı Süzme, Yazılımda Saldırı Riskini Azaltan Önemli Bir Aşamadır. Parametrik Sorgular, Kod Enjeksiyonlarına Karşı Koruma ve Veri Uzunluğu/ Karakter Kontrolleri Güvenliği Artırır.","paragraph2":"Kişisel Verilerin Korunmasında Maskeleme, Şifreleme ve Güvenli Aktarımlar Temel Önlemlerdir."},"NarrationText":"Yazılım, girdi ve çıktıları doğrulayarak saldırı ve istismar risklerini azaltır. Parametrik sorgular, kod enjeksiyonuna karşı koruma, veri uzunluğu ve karakter kontrolleri gibi işlemler güvenliği destekler. Kişisel verilerin korunmasında; verilerin maskeleme, şifreleme ile saklanması ve iletiminin korumalı kanallardan yapılması, hassas verilerin yetkisiz ellere geçmesinin önüne geçmek için gereklidir.","Images":[{"ImagePrompt":"input output validation, security filters, preventing code injection, parameterized queries, personal data protection, masking, encryption, data transfer security","ImageSize":"W1024xH1792","ImageUrl":"https://localhost/ContentFiles/IdealStudioFiles/AI_Section_9-b1f5fa1e-fec1-4df0-ba10-dc3010fa7a2b.jpg","IsSuccess":false,"ErrorMessage":null}],"YoutubeUrl":null,"AudioDuration":25,"SpeechAudioUrl":"https://localhost/ContentFiles/IdealStudioFiles/AI_Section_9_941db2ed-9f8a-44a6-9753-790ff8931be0.mp3","SpeechFileName":"AI_Section_9_941db2ed-9f8a-44a6-9753-790ff8931be0.mp3","RelevantDocumentPart":null},{"PageStyle":21,"YoutubeSearchKeyword":null,"Index":10,"Title":"Güvenli Yazılım Geliştirme Sürecinin Özeti ve Önemi","Description":null,"Content":{"paragraph1":"Güvenli Yazılım Geliştirme; İlkeler, Yöntemler ve Yaşam Döngüsü ile Tüm Süreçlerde Yüksek Güvenlik Hedeflenir.","paragraph2":"Uygulama Güvenliği Kuralları ve Denetim Listeleri, Standart ve Sürdürülebilir Güvenlik Sağlar.","paragraph3":"Bu Yaklaşımlar, Güvenlik Seviyesinin Ölçülmesini ve Kurumsal Risk Yönetimini Etkinleştirir."},"NarrationText":"Güvenli yazılım geliştirme; ilkeler, yöntemler, yaşam döngüsü süreçleri, analiz ve testler ile desteklenerek yazılımların bütünlük, erişilebilirlik ve gizlilik açısından yüksek güvenlikle çalışmasını hedefler. Uygulama güvenliği kuralları ve denetim listeleri, güvenliğin sürekliliği için gereklidir. Tüm bu yaklaşımlar, yazılım projelerinde güvenliğin standartlaşmasını, güvenlik seviyesinin ölçülmesini ve kurumsal risklerin etkin biçimde yönetilmesini sağlar.","Images":[{"ImagePrompt":"summary of secure software development process, security principles, testing, analysis, application security checklist, measuring security level, organizational risk management, pipeline style illustration","ImageSize":"W1024xH1792","ImageUrl":"https://localhost/ContentFiles/IdealStudioFiles/AI_Section_10-468be347-7136-4115-b764-02672f6aa015.jpg","IsSuccess":false,"ErrorMessage":null}],"YoutubeUrl":null,"AudioDuration":28,"SpeechAudioUrl":"https://localhost/ContentFiles/IdealStudioFiles/AI_Section_10_1ee2badd-5a44-4bfa-bd37-08a31303e7a7.mp3","SpeechFileName":"AI_Section_10_1ee2badd-5a44-4bfa-bd37-08a31303e7a7.mp3","RelevantDocumentPart":null},{"PageStyle":11,"YoutubeSearchKeyword":"Güvenli Yazılım Geliştirme Kılavuzu Eğitimi","Index":11,"Title":"Güvenli Yazılım Geliştirme Kılavuzu Eğitimi","Description":null,"Content":null,"NarrationText":null,"Images":null,"YoutubeUrl":"https://www.youtube.com/watch?v=M68-NpI-xiU","AudioDuration":0,"SpeechAudioUrl":null,"SpeechFileName":null,"RelevantDocumentPart":null},{"PageStyle":12,"YoutubeSearchKeyword":null,"Index":12,"Title":"Question 1","Description":null,"Content":null,"NarrationText":null,"Images":null,"YoutubeUrl":null,"AudioDuration":5,"SpeechAudioUrl":"https://localhost/ContentFiles/IdealStudioFiles/1-12_ai_Questionccec3202-ff24-484c-bee4-c7556efd8e92.mp3","SpeechFileName":"1-12_ai_Questionccec3202-ff24-484c-bee4-c7556efd8e92.mp3","RelevantDocumentPart":null},{"PageStyle":13,"YoutubeSearchKeyword":null,"Index":13,"Title":"Question 2","Description":null,"Content":null,"NarrationText":null,"Images":null,"YoutubeUrl":null,"AudioDuration":5,"SpeechAudioUrl":"https://localhost/ContentFiles/IdealStudioFiles/1-13_ai_Question4e81881c-059a-49a1-9f5d-253114087ef4.mp3","SpeechFileName":"1-13_ai_Question4e81881c-059a-49a1-9f5d-253114087ef4.mp3","RelevantDocumentPart":null},{"PageStyle":14,"YoutubeSearchKeyword":null,"Index":14,"Title":"Question 3","Description":null,"Content":null,"NarrationText":null,"Images":null,"YoutubeUrl":null,"AudioDuration":4,"SpeechAudioUrl":"https://localhost/ContentFiles/IdealStudioFiles/1-14_ai_Question1b8b7aa1-c368-4c28-9002-d865dac299e9.mp3","SpeechFileName":"1-14_ai_Question1b8b7aa1-c368-4c28-9002-d865dac299e9.mp3","RelevantDocumentPart":null},{"PageStyle":100,"YoutubeSearchKeyword":null,"Index":100,"Title":"Şimdi Sıra Sizde","Description":null,"Content":"\"%3Cp%20style=%22text-align:%20center;%22%3E%3Cspan%20style=%22font-size:2.857142857142857em;%22%3E%3Cspan%20style=%22color:#ffffff;%22%3E%3Cspan%20style=%22font-family:Alata,sans-serif;%22%3E%C5%9Eimdi%20%3C/span%3E%3C/span%3E%3C/span%3E%3C/p%3E%0A%0A%3Cp%20style=%22text-align:%20center;%22%3E%C2%A0%3C/p%3E%0A%0A%3Cp%20style=%22text-align:%20center;%22%3E%3Cspan%20style=%22font-size:2.857142857142857em;%22%3E%3Cspan%20style=%22color:#ffffff;%22%3E%3Cspan%20style=%22font-family:Alata,sans-serif;%22%3ES%C4%B1ra%20Sizde%3C/span%3E%3C/span%3E%3C/span%3E%3C/p%3E%0A\"","NarrationText":null,"Images":null,"YoutubeUrl":null,"AudioDuration":2,"SpeechAudioUrl":"https://localhost/ContentFiles/IdealStudioFiles/AI_Section_100_341449e8-c81e-4bb6-b880-898439d93a0f.mp3","SpeechFileName":"AI_Section_100_341449e8-c81e-4bb6-b880-898439d93a0f.mp3","RelevantDocumentPart":null},{"PageStyle":101,"YoutubeSearchKeyword":null,"Index":101,"Title":"Tebrikler, Eğitimi Tamamladınız","Description":null,"Content":"\"%3Cp%20style=%22text-align:%20center;%22%3E%3Cspan%20style=%22color:#ffffff;%22%3E%3Cspan%20style=%22font-size:2.5em;%22%3E%3Cspan%20style=%22font-family:Alata,sans-serif;%22%3E%3Cstrong%3ETebrikler,%20E%C4%9Fitimi%20Tamamlad%C4%B1n%C4%B1z%3C/strong%3E%3C/span%3E%3C/span%3E%3C/span%3E%3C/p%3E%0A\"","NarrationText":null,"Images":null,"YoutubeUrl":null,"AudioDuration":3,"SpeechAudioUrl":"https://localhost/ContentFiles/IdealStudioFiles/AI_Section_101_79013149-d1ca-47fa-9727-5fc41a6509bc.mp3","SpeechFileName":"AI_Section_101_79013149-d1ca-47fa-9727-5fc41a6509bc.mp3","RelevantDocumentPart":null}],"GeneralQuiz":[{"Index":12,"Type":0,"Question":"Güvenli Yazılım Geliştirmenin temel amacı aşağıdakilerden hangisidir?","Options":["Yazılım geliştirme süresini kısaltmak","Yalnızca performansı artırmak","Yazılımlardaki açıklıkları en aza indirgemek","Sadece kullanıcı arayüzünü iyileştirmek"],"CorrectAnswers":["Yazılımlardaki açıklıkları en aza indirgemek"],"Statements":null,"IsSuccess":true,"ErrorMessage":null},{"Index":13,"Type":1,"Question":"Aşağıdakilerden hangileri temel yazılım güvenliği ilkeleri arasında yer alır?","Options":["En az yetki ile çalışma","Erişimlerin sürekli denetlenmesi","Yalnızca tek faktörlü doğrulama kullanılması","Saldırı yüzeyinin minimumda tutulması"],"CorrectAnswers":["En az yetki ile çalışma","Erişimlerin sürekli denetlenmesi","Saldırı yüzeyinin minimumda tutulması"],"Statements":null,"IsSuccess":true,"ErrorMessage":null},{"Index":14,"Type":2,"Question":"Aşağıdaki ifadelerin Doğru mu Yanlış mı olduğuna karar verin","Options":null,"CorrectAnswers":null,"Statements":[{"Statement":"Statik analiz sadece yazılım geliştirme tamamlandıktan sonra uygulanır.","Answer":"False"},{"Statement":"Güvenli Yazılım Geliştirme Yaşam Döngüsü, yazılımın her aşamasında güvenlik unsurlarının izlenmesini hedefler.","Answer":"True"},{"Statement":"Güvenlik olgunluk modelleri sadece yazılım test aşamasında kullanılır.","Answer":"False"},{"Statement":"Parametrik sorgular, kod enjeksiyonlarına karşı koruma sağlar.","Answer":"True"}],"IsSuccess":true,"ErrorMessage":null}],"IsSuccess":true,"ErrorMessage":"","ErrorCode":0,"ThreadId":null,"FullDocumentText":null,"SummaryDocumentText":null}